.custom-node {
  background: var(--vscode-editor-background);
  border-radius: 8px;
  padding: 0;
  min-width: 200px;
  font-size: 12px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.command-node { border-color: #4CAF50; }
.pipe-node { border-color: #2196F3; }
.condition-node { border-color: #FF9800; }
.loop-node { border-color: #9C27B0; }
.variable-node { border-color: #00BCD4; }

.node-header {
  display: flex;
  align-items: center;
  padding: 8px;
  background: var(--vscode-titleBar-activeBackground);
  border-radius: 6px 6px 0 0;
  border-bottom: 1px solid var(--vscode-panel-border);
}

.node-icon {
  margin-right: 8px;
  font-size: 16px;
}

.node-title {
  font-weight: 600;
  color: var(--vscode-foreground);
}

.node-content {
  padding: 8px;
}

.node-input,
.node-textarea,
.node-select {
  width: calc(100% - 12px);
  box-sizing: border-box;
  padding: 4px 6px;
  margin: 4px 0;
  background: var(--vscode-input-background);
  color: var(--vscode-input-foreground);
  border: 1px solid var(--vscode-input-border);
  border-radius: 4px;
  font-family: var(--vscode-editor-font-family);
  font-size: 12px;
}

.node-input:focus,
.node-textarea:focus,
.node-select:focus {
  outline: none;
  border-color: var(--vscode-focusBorder);
}

.node-textarea {
  resize: vertical;
  min-height: 40px;
  font-family: 'Courier New', Courier, monospace;
}

.custom-node.selected {
  border-color: var(--vscode-focusBorder);
}

.condition-handles {
  position: relative;
}

.handle-labels {
  position: absolute;
  bottom: -20px;
  left: 0;
  right: 0;
  display: flex;
  justify-content: space-around;
  font-size: 10px;
  pointer-events: none;
}

.handle-label-true {
  color: #4CAF50;
  margin-left: -15px;
}

.handle-label-false {
  color: #f44336;
  margin-right: -15px;
}

.react-flow__handle {
  width: 10px;
  height: 10px;
  background: var(--vscode-button-background);
  border: 2px solid var(--vscode-panel-border);
}

.react-flow__handle.react-flow__handle-connecting {
  background: var(--vscode-button-hoverBackground);
}

.react-flow__handle.react-flow__handle-valid {
  background: #4CAF50;
}

.literal-node {
  min-width: 150px;
  max-width: 200px;
}

.string-node { border-color: #6BC46D; }
.number-node { border-color: #64B5F6; }
.array-node { border-color: #BA68C8; }
.output-node { border-color: #FFB74D; }

.output-display {
  background: var(--vscode-textCodeBlock-background);
  border: 1px solid var(--vscode-panel-border);
  border-radius: 4px;
  padding: 8px;
  font-family: 'Courier New', Courier, monospace;
  font-size: 11px;
  min-height: 50px;
  max-height: 150px;
  overflow-y: auto;
  white-space: pre-wrap;
  word-break: break-all;
}

.arg-controls {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: 8px;
  gap: 8px;
}

.arg-counter {
  display: flex;
  align-items: center;
  gap: 6px;
}

.arg-counter button {
  width: 20px;
  height: 20px;
  border: 1px solid var(--vscode-button-border);
  background: var(--vscode-button-background);
  color: var(--vscode-button-foreground);
  border-radius: 3px;
  cursor: pointer;
  font-size: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.arg-counter button:hover {
  background: var(--vscode-button-hoverBackground);
}

.arg-counter span {
  font-size: 11px;
  color: var(--vscode-foreground);
}

.checkbox-label {
  display: flex;
  align-items: center;
  gap: 4px;
  font-size: 11px;
}

.checkbox-label input[type="checkbox"] {
  margin: 0;
}

/* Canvas Phase 2 - 新ノードタイプのスタイル */
.memo-node { border-color: #66BB6A; }
.file-node { border-color: #42A5F5; }
.bash-function-node { border-color: #FF7043; }
.connector-node { border-color: #AB47BC; }

/* CSS変数の定義 */
:root {
  --node-background: var(--vscode-editor-background);
  --node-border: var(--vscode-panel-border);
  --node-header-background: var(--vscode-titleBar-activeBackground);
  --selection-color: var(--vscode-focusBorder);
  --text-color: var(--vscode-foreground);
  --text-muted: var(--vscode-descriptionForeground);
  --handle-color: #6c6c6c;
  --handle-border: #888888;
  --handle-hover-color: #007bff;
  --handle-hover-border: #0056b3;
  --handle-connecting-color: #007bff;
  --handle-connecting-border: #0056b3;
  --handle-valid-color: #4CAF50;
  --handle-valid-border: #388E3C;
  --handle-invalid-color: #f44336;
  --handle-invalid-border: #d32f2f;
  --input-background: var(--vscode-input-background);
  --input-border: var(--vscode-input-border);
  --button-background: var(--vscode-button-background);
  --button-border: var(--vscode-button-border);
  --button-text: var(--vscode-button-foreground);
  --button-active: var(--vscode-button-hoverBackground);
  --button-disabled: var(--vscode-button-secondaryBackground);
  --button-success: #4CAF50;
  --button-danger: #f44336;
  --code-background: var(--vscode-textCodeBlock-background);
  --output-background: var(--vscode-editor-selectionBackground);
  --border-color: var(--vscode-panel-border);
  
  /* ノードタイプ別カラー */
  --memo-node-color: #66BB6A;
  --file-node-color: #42A5F5;
  --function-node-color: #FF7043;
  --connector-node-color: #AB47BC;
}

/* React Flowのデフォルトノードスタイルを無効化 */
.react-flow__node {
  border: none !important;
  background: transparent !important;
  box-shadow: none !important;
  padding: 0 !important;
}

.react-flow__node.react-flow__node-default {
  border: none !important;
  background: transparent !important;
}

/* ハンドルの改善されたスタイル */
.react-flow__handle {
  width: 12px;
  height: 12px;
  background: var(--handle-color);
  border: 2px solid var(--handle-border);
  border-radius: 50%;
  transition: all 0.2s ease;
  opacity: 0.7;
}

.react-flow__handle:hover {
  opacity: 1;
  background: var(--handle-hover-color);
  border-color: var(--handle-hover-border);
}

.react-flow__handle.react-flow__handle-connecting {
  background: var(--handle-connecting-color);
  border-color: var(--handle-connecting-border);
  opacity: 1;
}

.react-flow__handle.react-flow__handle-valid {
  background: var(--handle-valid-color);
  border-color: var(--handle-valid-border);
}

.react-flow__handle.react-flow__handle-invalid {
  background: var(--handle-invalid-color);
  border-color: var(--handle-invalid-border);
}

/* 新ノードの共通スタイル */
.memo-node,
.file-node,
.function-node,
.connector-node {
  font-family: var(--vscode-font-family);
  line-height: 1.4;
  transition: all 0.2s ease;
  cursor: grab;
}

.memo-node:hover,
.file-node:hover,
.function-node:hover,
.connector-node:hover {
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1) !important;
}

.memo-node:active,
.file-node:active,
.function-node:active,
.connector-node:active {
  cursor: grabbing;
}

.memo-node.selected,
.file-node.selected,
.function-node.selected,
.connector-node.selected {
  box-shadow: 0 2px 8px rgba(0, 123, 255, 0.15) !important;
}

.memo-node .memo-header,
.file-node .file-header,
.function-node .function-header,
.connector-node .connector-header {
  font-weight: 600;
  user-select: none;
}

/* メモノード用スタイル */
.memo-node textarea {
  font-family: var(--vscode-editor-font-family);
  line-height: 1.4;
}

/* ファイルノード用スタイル */
.file-node input[type="text"] {
  font-family: var(--vscode-editor-font-family);
}

/* 関数ノード用スタイル */
.function-node pre {
  white-space: pre-wrap;
  word-break: break-word;
}

/* コネクタノード用スタイル */
.connector-node select {
  appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3cpolyline%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 8px center;
  background-size: 16px;
  padding-right: 32px;
}